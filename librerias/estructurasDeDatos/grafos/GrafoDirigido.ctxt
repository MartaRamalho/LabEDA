#BlueJ class context
comment0.target=GrafoDirigido
comment0.text=\ Implementacion\ de\ un\ grafo\ Dirigido\ (Ponderado\ o\ no)\ mediante\ \r\n\ \ Listas\ de\ Adyacencia.<br>\r\n\ \r\n\ @version\ Diciembre\ 2019\r\n
comment1.params=nV
comment1.target=GrafoDirigido(int)
comment1.text=\ Crea\ un\ grafo\ Dirigido\ vacio\ con\ nV\ vertices.\ \r\n\ \ @param\ nV\ \ Numero\ de\ vertices\ del\ grafo\r\n
comment2.params=
comment2.target=int\ numVertices()
comment2.text=\ Devuelve\ el\ numero\ de\ vertices\ de\ un\ grafo.\ \r\n\ \ @return\ \ int\ Numero\ de\ vertices\r\n
comment3.params=
comment3.target=int\ numAristas()
comment3.text=\ Devuelve\ el\ numero\ de\ aristas\ de\ un\ grafo\r\n\ @return\ \ \ \ \ Numero\ de\ aristas\ \r\n
comment4.params=i\ j
comment4.target=boolean\ existeArista(int,\ int)
comment4.text=\ Comprueba\ si\ la\ arista\ (i,j)\ esta\ en\ un\ grafo.\r\n\ @param\ i\ \ \ \ Vertice\ origen\r\n\ @param\ j\ \ \ \ Vertice\ destino\r\n\ @return\ boolean\ true\ si\ (i,j)\ esta\ y\ false\ en\ caso\ contrario\r\n
comment5.params=i\ j
comment5.target=double\ pesoArista(int,\ int)
comment5.text=\ Devuelve\ el\ peso\ de\ la\ arista\ (i,j)\ de\ un\ grafo,\ 0\ si\ dicha\ arista\ \r\n\ no\ esta\ en\ el\ grafo.\r\n\ @return\ double\ Peso\ de\ la\ arista\ (i,j),\ 0\ si\ no\ existe\r\n
comment6.params=i\ j
comment6.target=void\ insertarArista(int,\ int)
comment6.text=\ Si\ no\ esta,\ inserta\ la\ arista\ (i,\ j)\ en\ un\ grafo\ no\ Ponderado\ \r\n\ (al\ final\ de\ la\ Lista\ de\ adyacentes\ a\ i).\r\n\ @param\ i\ \ \ \ Vertice\ origen\r\n\ @param\ j\ \ \ \ Vertice\ destino\r\n
comment7.params=i\ j\ p
comment7.target=void\ insertarArista(int,\ int,\ double)
comment7.text=\ Si\ no\ esta,\ inserta\ la\ arista\ (i,\ j)\ de\ peso\ p\ en\ un\ grafo\ Ponderado\ \r\n\ (al\ final\ de\ la\ Lista\ de\ adyacentes\ a\ i).\r\n\ @param\ i\ \ \ \ Vertice\ origen\r\n\ @param\ j\ \ \ \ Vertice\ destino\r\n\ @param\ p\ \ \ \ Peso\ de\ (i,\ j)\r\n
comment8.params=i
comment8.target=librerias.estructurasDeDatos.modelos.ListaConPI\ adyacentesDe(int)
comment8.text=\ Devuelve\ una\ Lista\ Con\ PI\ que\ contiene\ los\ adyacentes\ al\ vertice\ i.\r\n\ @param\ i\ Vertice\ del\ que\ se\ obtienen\ los\ adyacentes\r\n\ @return\ ListaConPI\ con\ los\ vertices\ adyacentes\ a\ i\r\n
numComments=9
